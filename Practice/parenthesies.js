//Problem 1
    // let par = "()(((()())))()))()(())(()()()))))())(()((((()()()(()))())()((((((()))(()))())())())(()()))(((()())(())))))()))((()))()(())(()))())()(((())(()))()))(()(()())())()())))))()))(()()))(()()()()))(((()())(()()))))(()((())))((()((())()((())(()))(()))))()(((())))(((()))(()()())))))((()(()(()()(((()())))()(()))(()((()((())(())())(()))))()()(((()(()(()(())))))(()(((()(()))(()((()((())()))((((((()()))()(((()))()()(())()(((()())))()())())(()()(()(()((()()(((())))))(()((()())()))))(()((()((((())))))))(())((())))))))))))(())))())))((((()(()((())((()(()()(())))((()(()()(()))(())((((()()())()(((()))()(())))()))((((((((()(((())(())()((()()(()())(()()(())(())())()(()))())(()((()())))()))(()()((())()()))(()(()))(()))())(()((())))(()((()()((()))))()(((()(()()((()())())()()())))()((()()()))()((())()(()(()))((()))))(()())(())(()(()(())(((()())(((())))(()))))(((())))(()(())()()))(())()(()()(())))()())()(((()(()()())(((()()(()()()((((((())()))(()((()()(())))))))()(((()))(((()()()()((((()(())(()(()(()()))(())()()()((()))))()())(())))()()()(()(()((())((((())()((((()))((((()))((()(()))()))((())))((()(()(())())(())()))(()(()(()((()(())(()(((()())))((()()((())())()())()))))))()))(()((()(())())))))(()())(()((((())())))()()))()((((()()()))()((()((((()))((((()((((()()()()()))))())(())))()))())((()()))()())((()))))())((()))()()((((((((()(())())(()(()((()(()(())(()(()((((()))(()())())()((()())((()())(()((((())(()((()))(()((()(((()()()())(())(()((((()())()))()()()())))())()))))(()())(((()())()(()()))())((((())))))((()))((())())())))(()()())()()())())(())(()(())))()(()(())(()((((()))(((()(()()))()(())()(())))()((()(()(()()())(())()(()()))()))))((()(()()))(()())())((((((())()()))((()))))()((())((()())())(()()))()))((((()())(()()(((()(()))))(()()()()())((()(()))((()(()()))(())()((()())()()((())((()())))))((())())()()))()))(())((()))(())((((())))()()()())))())()(()))(()(())()())(((()))()))((()(())()())()(((())(()(()))))()(()((()())))))())))()(()()()()((()))(())(())))))((((()))(((()())(((()()())(()()()())((())()())()(((()))))))((()(((()(()(()))(())()()(())()()()(()()((((()(((((()((())))((()()((((()()))(()())(()))))))(())(()()))((((()))())(()((())))()))))(((()(())())()(()))))((())))))()()))((()())(()())))(())(((()))((())())(()(((())())(((())))()()))())(((()(())((()()(())))(()(()()(((((()()(()))((())((()((((()((((((((((((()()())))))((((())()(((())))))))))())(()(()(()(()((()(()(()(())((()))()()))()((((()))(((()(())((())(())()()((())()(()(((())(()(((()))(((((()))())()(())((()((((()())())(()))()()((((()(())()(()))(((((()()(()())))((())())(()))()(()()(()()())((()))()))())(())))(()())())))()()))())()()()(((((())))))()()())(()())))))(()))((()()(()((()(()())()((()())))))((()())()())))(()(()()())(()))))()(((((((()()()()()(())())()((((()(()))()()))(()))())(()))))))))))())()))(())(((())(((()))((((()()(()()))))))())())()(()))()()())))(((((()())())))(()()(()(((((()))((((()())((())((()((()))))()()(())(())()(()(((())()((()))))(())(((())())))(())(((((()()()))((()((())))())())((())())())))())(((()())())))(()()))((())))((()(()())((((())(()())(((())))))))((()(()(((()()()(((((())()))))()))()))((())))()()))(()())(())))))((((((())((())()(()))()(((())))()(()))()(()()((()(())())(())(())((((()())(())((()(()(((()())())())()))((()))))())(()))))((())()(()(())())()())()))))()()(()(()))(()()))))()())))))())(()())())(()))()((()(()(()))((()((()(())))()()((()()((((()()((()(()))())()(()))()()()(((()))((())))))((((((((((((())))())()))))((((()()((()((((())))())((())()()((()))()((()()())(()))(()((())()()())(()))(((()((())()((())(()()((()))(()())((()))())((())))))(()())()))(((((()((()((()(())()))(())())((())())(())))))))(()()()())(((())((((())))())(((()))()()))()))))))(()((()(()((((())(((())(())()))(())()))())))(())(((())(()(()()((()((()))))()()()(())((()(()())(()(()))())(())(((()(((()())((((()((())((((())(()()())())()(())))))())())))))()(()))))()()))((())()()(()()(()()))((()())(((()()()(((())()()))(()(())()()))))))()()))(((()((()((()(())(((()())))))(()())((((()())))(()())(())))())((())(()(())())()))()()(())(())())()())(())))))((())(())))(())(())))(()()()))(()((())((((())))))())()()((((()())()))))()()))(()))))(())((((()(()()()()))))()()(((()((())())((()())())(())((())))))(((((())))((((()()))(()))))()))))()())()))(())(())))((((()(()(()()()((((()((((())))(())))))()))))()()(())))))()((())))((()(())((((()(((()))(()(()()))((())((())())))((())))((((((((())))((((()())(((()))))()())))))(()())))()((()()()()(()()(((())(()((())()((()())(((()()(((()((()(((()(()((()))))()()((()(()()(())))()()()()()(()()((()))(()()))((((((()(()((()(((()(()()((()()()(())()()))(()(()(()))()())())())(())))))(()())()(())))))(()()())())((((())()(((((()((()((()(()()((())(((((())()(()(()))(()(((((((()())())(()()))()((()))())((((()((((())())()((((()()()()))()(()()(()(()())(()())))()(()()(()()()())((()()((((())()()((((((()(((()((()(()(()(()))(()(()((())()))()())((()((()))())((()()()))(())((()(()(())(((()(()((()))()()())())(()(()((()(())(()()()(()())))((()((())))()(()((((())(()((()()()(()))))())()()))()(()((()(()(())()(())(())))()((((()((((((((()))()()())))())()((()(((()))()))(()((((()())())((((())()()))(()))(((()))(()(()))()(()))()((((((()()(((((())()(()(()(((())))))))())))))((())(()())(()()())((())()()())))()()(((((())))()))))(())(())())((((()(()()(()))((()))((()(())()(())))(()))(()))(())))(()))())))()((((((((((())()()))((((((()()))))())))()(((((((()())))(((()()))))()()(())(()(())())(())()))))()()()))(()((((()((((())(())((())))())((()()))()(((())()((()())()(()()()((()(((((()(()()()((((()()))))(((()(()(())()))((()))((()()())))(()((()(()((()()()()()((())(((()())()()((())()(((()))(()(())))))()())(((()()))()))((())((()(()))()((((()))()(())()()))))())())(()((((((()))((()()(()())))(())())))())(()())()((((((()()((()()))())((((()()(())()))())()()(((())))))))((()(()()(((((((((()(())(())(((()()()((((()())(()(((()(())()()()))())()())))()())))(()))())()()))())()()))()((())()())))(((())()(((()()(())(((()(()()()())((()))((()()((()()))((())(())(()(()((())())())()(()))))()())(((((()()()(())))((((()()()(()((())(()))())))))))(((())())()()(()(()()()))))(()())((()()))()()(()))())))(())(((())()()))(()()())(((()()())))(((()())(()))()))))))()()))()))()()(()))(()(()(()()(())(()()()))())(()()(()((())))(()())())((()()))()(((())))()(()))((()()((((((()))))(())((())(((((()())(()))(()))((((()))))(())(((()()())(((()()()()()()))(()()())())))()(()))))()())((((()()())())))()()))()())))))()(((((()(((()((())()()()((())))()))())()(()()))(()(())))))(()()(()((()((()(())((()((()())))()())))()()())()(()()(()(((()()((((((()())((()())()(()(((()))))())()())()())()(()())()))))))))))((()))(()))))))(()((())((()((()(()(()(()))()(()))()())())()())()(()(()))))()))(()((((((((((())))()()()(())(())(())(((()())()()((()()()(())))((())())()((((())(()))())(((()(()(((()((())(())))))))))))()(((((((()))))()(()))()))))(())(((()((((())((()(())()()())(()))())((()()()))(()(())())))())((()))((((()()))((())(()()((()()))))((((())(()))((()()((()(())()()(()()(()((()())(())))(()((()())()()()((())((()())(()(()())()(()()))))(())))()))))())(((()()()()(()(";

    // let minus = 0;
    // let chars = par.split("");
    // let west = 0;
    // let east = 0;
    // let newChars = par.split(")");
    // let pos = 0;

    // for(let i =0; i<chars.length; i++){
    //     if(chars[i] == ")"){
    //         pos++;
    //         if(chars[i+1] == ")"){
    //             i++;
    //         }
    //     }if(chars[i] == "("){
    //         pos--;
    //         if(chars[i+1] == "("){
    //             i++;
    //         }
    //     }
    // };

    // console.log(pos);

    // let minus = 0;

    // for(let j = 0; j<newChars.length; j++){
    //     if(chars[j] == ""){
    //         i++;
    //     } else if(chars[j].length % 2 == 0){
    //         west++;
    //     }else if(chars[j].length % 2 == 1){
    //         west = west + (Math.ceil(chars[j].length/2));
    //     };
    // };
    // console.log(newChars.flat());
    // minus = minus/2;
    // console.log(minus);


    // for(let i = 0; i<chars.length; i++){
    //     if(chars[i] == "("){
    //         west++;
    //     }else if(chars[i] == ")"){
    //         east++;
    //     }
    // }

    // let total = west - east;
    // if(total < 0){
    //     console.log(`He is ${Math.abs(total)} stations east`);
    // }else if(total>0){
    //     console.log(`He is ${Math.abs(total)} stations west`);
    // };

//Problem 2

    // let dir = 0;
    //     for(let i = 0; i<chars.length; i++){
    //         if(chars[i] == "("&&dir>0){
    //             west++;
    //             dir -= 1;
    //         }else if(chars[i] == ")"){
    //             east++;
    //             dir++;
    //         }
    //     }

    // console.log(`The train is ${dir} stations to the East`);

//Problem 3

    // for(let i = 0; i<chars.length; i++){
    //     if(chars[i] == "("){
    //         west++;
    //     }
    //     else if(chars[i] == ")"){
    //         east++;
    //     }
    // }

    // for(let i = 0; i<chars.length; i++){
    //     if(chars[i] == "("){
    //         west++;
    //     }else if(chars[i] == ")"){
    //         east++;
    //     }
    // }

    // console.log(west);
    // console.log(east);

    // let total = west - east;
    // if(total < 0){
    //     console.log(`He is ${Math.abs(total)} stations east`);
    // }else if(total>0){
    //     console.log(`He is ${Math.abs(total)} stations west`);
    // };

    // function wordShortner(text){
    //     let spliced = text.split(" ");
    //     let newS = [];
    //     for(let i = 0; i<spliced.length; i++){
    //         if(spliced[i].length <= 4){
    //             newS.push(`${spliced[i]}`);
    //         };
    //     };
    //     console.log(newS);
    // };

    // function math(){
    //     let number = Math.ceil(Math.random()*100);
    //     let output = number * 4 + 13;
    //     console.log(`number is ${number}`);
    //     console.log(`the output is ${output}`);
    // }

    function power(){

    };
    function square(){

    };
    function slope(){

    };


